@startuml
class Dataloader{
    SRC : torchtext.legacy.data.Field
    TGT : torchtext.legacy.data.Field
    +load_translation()
}

class Trainer{
    model : Model
    optimizer : Optimizer
    criterion : Criterion
    #valid_epoch()
    #train_epoch()
    #save_model()
    #cal_performance()
    +train()
}

class Optimizer{
    param_groups
    state_dict
    +step()
    +zero_grad()
}

class Criterion{
    ignore_index
    +forawrd()
}

Trainer *-- Model
Trainer *-- Optimizer
Trainer *-- Criterion

class Encoder{
    +forawrd()
}
class Decoder{
    +forward()
}
class Model{
    encoder: Encoder
    decoder: Decoder
    +forawrd()
}
Model *-- Encoder
Model *-- Decoder

class Translator{
    model : Model
    dl : Dataloader
    #load_model()
    +generate()
    +translate()
}
Translator o-- Dataloader
Translator *-- Model

@enduml